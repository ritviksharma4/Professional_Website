{"version":3,"file":"327-a808f4c5e57252706c46.js","mappings":";;;;;;;;;;;;;AAqBA,GAAMA,CAAAA,CAAAA,CAAAA,gBAASC,YAAf,CAA2BE,QAEXC,CAAAA,CAFWD,CAEXC,CAFWD,CAiBzBc,CAjByBd,CAkBzBe,CAlByBf,CAkBzBe,CAAAA,GAdEb,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAcFa,CAbEZ,CAAAA,CAAAA,CAAAA,CAAAA,OAaFY,CAZEX,CAAAA,CAAAA,CAAAA,CAAAA,SAYFW,CAXEV,CAAAA,CAAAA,CAAAA,CAAAA,QAWFU,CAVET,CAAAA,CAAAA,CAAAA,CAAAA,cAUFS,CATER,CAAAA,CAAAA,CAAAA,CAAAA,GASFQ,CAREP,CAAAA,CAAAA,CAAAA,CAAAA,YAQFO,CAREP,CAAAA,CAAAA,CAAAA,CACAC,QAOFM,CAPEN,CAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAW,EAAXA,CAAW,CAObM,CANEL,CAAAA,CAAAA,CAAAA,CAAAA,cAMFK,CALEJ,CAAAA,CAAAA,CAAAA,CAAAA,eAKFI,CALEJ,CAAAA,CAAAA,CAAAA,CACAC,SAIFG,CAJEH,CAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,CAAAA,OAAAA,CAAAA,CAIFG,CAHKF,CAAAA,CAAAA,6DAAAA,CAAAA,CAAAA,CAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAAA,WAAAA,CAAAA,UAAAA,CAAAA,gBAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,UAAAA,CAAAA,gBAAAA,CAAAA,iBAAAA,CAAAA,WAAAA,CAAAA,CAGLE,CAGEC,CAAAA,CAMEd,CAAAA,CANFc,KAHFD,CAIEE,CAAAA,CAKEf,CAAAA,CALFe,MAJFF,CAKEG,CAAAA,CAIEhB,CAAAA,CAJFgB,MALFH,CAMEI,CAAAA,CAGEjB,CAAAA,CAHFiB,MANFJ,CAOEK,CAAAA,CAEElB,CAAAA,CAFFkB,WAPFL,CAQmBM,CAAAA,CACfnB,CAAAA,CADFS,eARFI,CAWA,IAAKD,CAAAA,CAAKQ,OAAV,CACE,YAGF,GAAMC,CAAAA,CAAAA,CAAaT,CAAAA,CAAKQ,OAALR,CAAaU,aAAbV,CAAaU,yBAAbV,CAAnB,CAEA,GAAIW,6DAAAA,IAA8BF,CAA9BE,EAA8BF,CAAeR,CAAAA,CAASO,OAA1D,CACE,YAGF,GAAMI,CAAAA,CAAAA,CAAWC,IAAAA,CAAKC,SAALD,CAAeR,CAAfQ,CAAjB,CACME,CAAAA,CAAYC,6DAAAA,CAAeJ,CAAfI,CADlB,CAGArB,CAAAA,CAAAA,6DAAAA,CAAAA,CACEG,SAAAA,CAAAA,CADFH,CAEEC,cAAAA,CAAAA,CAFFD,CAGEE,eAAAA,CAAAA,CAHFF,CAAAA,CAIKA,CAJLA,CAAAA,CAOA,GAAMsB,CAAAA,CAAAA,cACJC,gDAAAA,CAACC,yDAADD,CAACC,CAAcf,MAAAA,CAAQA,CAAtBe,CAA8BjB,KAAAA,CAAOA,CAArCiB,CAA4ChB,MAAAA,CAAQA,CAApDgB,CAADD,CAAqDf,CACjDY,CADiDZ,eAEjDe,gDAAAA,CAACE,yDAADF,CAACE,MAAAA,CAAAA,MAAAA,CAAAA,EAAAA,CACKC,6DAAAA,CACFf,CADEe,CAEF9B,CAFE8B,CAGFjB,CAHEiB,CAIFnB,CAJEmB,CAKFlB,CALEkB,CAMFd,CANEc,CADLD,CAADF,CAFJA,cAaEA,gDAAAA,CAACI,yDAADJ,CAACI,MAAAA,CAAAA,MAAAA,CAAAA,EAAAA,CACMvB,CADNuB,CACMvB,CACLG,KAAAA,CAAOA,CADFH,CAELI,MAAAA,CAAQA,CAFHJ,CAGLwB,SAAAA,CAAW7B,CAHNK,CADNuB,CAKKE,6DAAAA,CACFlC,CADEkC,CAEFT,CAAAA,EAAaxB,CAFXiC,CAGFnB,CAHEmB,CAIFnC,CAJEmC,CAKFhC,CALEgC,CAMFZ,CANEY,CAOF/B,CAPE+B,CAQF7B,CARE6B,CALLF,CAADJ,CAbFA,CADF,CAsCA,OAJiBjB,CAAAA,CAASO,OAATP,EAAoBlB,CAApBkB,CAA6BwB,6CAA7BxB,CAAsCyB,8CAIvD,EAHST,CAGT,CAHoBjB,CAAAA,CAAKQ,OAGzB,EAFAP,CAAAA,CAASO,OAATP,CAASO,CAAU,CAEnB,CAFmB,WAGbR,CAAAA,CAAKQ,OAALR,EACFyB,iDAAAA,CAAQ,IAARA,CAA0CzB,CAAAA,CAAKQ,OAA/CiB,CADEzB,CAC6CQ,CAFnD,CAEmDA","sources":["webpack://gatsby-starter-default/../src/components/lazy-hydrate.tsx"],"sourcesContent":["import React, { MutableRefObject } from \"react\"\nimport { hydrate, render } from \"react-dom\"\nimport { GatsbyImageProps } from \"./gatsby-image.browser\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImageProps, MainImage } from \"./main-image\"\nimport {\n  getMainProps,\n  getPlaceholderProps,\n  hasNativeLazyLoadSupport,\n  hasImageLoaded,\n} from \"./hooks\"\nimport { ReactElement } from \"react\"\n\ntype LazyHydrateProps = Omit<GatsbyImageProps, \"as\" | \"style\" | \"className\"> & {\n  isLoading: boolean\n  isLoaded: boolean // alwaystype SetStateAction<S> = S | ((prevState: S) => S);\n  toggleIsLoaded: (toggle: boolean) => void\n  ref: MutableRefObject<HTMLImageElement | undefined>\n}\n\nconst IS_DEV = process.env.NODE_ENV === `development`\n\nexport function lazyHydrate(\n  {\n    image,\n    loading,\n    isLoading,\n    isLoaded,\n    toggleIsLoaded,\n    ref,\n    imgClassName,\n    imgStyle = {},\n    objectPosition,\n    backgroundColor,\n    objectFit = `cover`,\n    ...props\n  }: LazyHydrateProps,\n  root: MutableRefObject<HTMLElement | undefined>,\n  hydrated: MutableRefObject<boolean>\n): (() => void) | null {\n  const {\n    width,\n    height,\n    layout,\n    images,\n    placeholder,\n    backgroundColor: wrapperBackgroundColor,\n  } = image\n\n  if (!root.current) {\n    return null\n  }\n\n  const hasSSRHtml = root.current.querySelector(`[data-gatsby-image-ssr]`)\n  // On first server hydration do nothing\n  if (hasNativeLazyLoadSupport() && hasSSRHtml && !hydrated.current) {\n    return null\n  }\n\n  const cacheKey = JSON.stringify(images)\n  const hasLoaded = hasImageLoaded(cacheKey)\n\n  imgStyle = {\n    objectFit,\n    objectPosition,\n    backgroundColor,\n    ...imgStyle,\n  }\n\n  const component = (\n    <LayoutWrapper layout={layout} width={width} height={height}>\n      {!hasLoaded && (\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            isLoaded,\n            layout,\n            width,\n            height,\n            wrapperBackgroundColor\n          )}\n        />\n      )}\n      <MainImage\n        {...(props as Omit<MainImageProps, \"images\" | \"fallback\">)}\n        width={width}\n        height={height}\n        className={imgClassName}\n        {...getMainProps(\n          isLoading,\n          hasLoaded || isLoaded,\n          images,\n          loading,\n          toggleIsLoaded,\n          cacheKey,\n          ref,\n          imgStyle\n        )}\n      />\n    </LayoutWrapper>\n  )\n\n  // Force render to mitigate \"Expected server HTML to contain a matching\" in develop\n  const doRender = hydrated.current || IS_DEV ? render : hydrate\n  doRender(component, root.current)\n  hydrated.current = true\n\n  return (): void => {\n    if (root.current) {\n      render((null as unknown) as ReactElement, root.current)\n    }\n  }\n}\n"],"names":["IS_DEV","process","env","NODE_ENV","lazyHydrate","image","loading","isLoading","isLoaded","toggleIsLoaded","ref","imgClassName","imgStyle","objectPosition","backgroundColor","objectFit","props","root","hydrated","width","height","layout","images","placeholder","wrapperBackgroundColor","current","hasSSRHtml","querySelector","hasNativeLazyLoadSupport","cacheKey","JSON","stringify","hasLoaded","hasImageLoaded","component","React","LayoutWrapper","Placeholder","getPlaceholderProps","MainImage","className","getMainProps","render","hydrate"],"sourceRoot":""}